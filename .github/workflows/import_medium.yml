# .github/workflows/import_medium.yml
#
# This workflow:
# 1. Checks out the repository
# 2. Sets up Ruby (matching GitHub Pages version)
# 3. Installs gems (including jekyll-import, rss, safe_yaml)
# 4. Runs the jekyll-import RSS command to fetch exactly one Medium post
# 5. Moves the generated file into _posts/ with correct front matter
# 6. Commits and pushes changes back to the repository

name: Import Medium Post via RSS

# Trigger on pushes to main (you can adjust as needed)
on:
  push:
    branches:
      - main

jobs:
  import_medium:
    runs-on: ubuntu-latest

    permissions:
      # Allow workflow to commit back to the repo
      contents: write    # :contentReference[oaicite:25]{index=25}

    steps:
      # 1. Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4  # :contentReference[oaicite:26]{index=26}
        with:
          persist-credentials: true
          fetch-depth: 0

      # 2. Set up Ruby (GitHub Pages uses Ruby 3.1.2 as of mid-2025; adjust if needed)
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1  # :contentReference[oaicite:27]{index=27}
        with:
          ruby-version: "3.1.2"   # Match GitHub Pagesâ€™ Ruby version from https://pages.github.com/versions/

      # 3. Install Bundler and required gems
      - name: Install Bundler and Gems
        run: |
          gem install bundler      # Ensure Bundler is available :contentReference[oaicite:28]{index=28}
          bundle config set path vendor/bundle
          bundle install

      # 4. Run jekyll-import RSS to fetch your specific Medium article
      - name: Import Medium Article
        run: |
          # Define the feed and target URL
          RSS_FEED="https://medium.com/feed/@gaurangabaishya15"
          TARGET_URL="https://medium.com/@gaurangabaishya15/the-results-of-the-choices-we-make-6be0f9588f91"

          # Use jekyll-import to pull only that one post
          bundle exec jekyll-import rss \
            --source "$RSS_FEED" \
            --one-post-url "$TARGET_URL" \
            --config _config.yml \
            --put-url-in-front-matter

      # 5. (Optional) Rename/move the generated file if you want a custom folder
      #    By default, jekyll-import writes to _posts/YYYY-MM-DD-<slug>.md
      #    If you want _posts/2019/08/blog-post-1.md, move and edit front matter here.
      - name: Move and Tweak the Post Filename
        run: |
          # Example: find the generated file (it begins with 2019-10-25-the-results-of-the-choices-we-make)
          GENERATED=$(ls _posts/2019-10-25-the-results-of-the-choices-we-make*.md)
          # Create target directories
          mkdir -p _posts/2019/08
          # Move it:
          mv "$GENERATED" _posts/2019/08/blog-post-1.md
          # (Optional) Insert or update front matter to match your permalink/tags
          # Using sed to update front matter in place:
          sed -i 's|^title:.*|title: "The results of the choices we make"|' _posts/2019/08/blog-post-1.md
          sed -i 's|^date:.*|date: 2019-10-25 00:00:00 +0000|' _posts/2019/08/blog-post-1.md
          sed -i '1,20s|^---$|---\ntags:\n  - life\n  - philosophy\n  - choice\npermalink: /posts/2019/08/blog-post-1/\n---|' _posts/2019/08/blog-post-1.md

      # 6. Commit and push the changes back into the repository
      - name: Commit and Push
        uses: stefanzweifel/git-auto-commit-action@v5  # :contentReference[oaicite:29]{index=29}
        with:
          commit_message: "chore: Import Medium article on choices (automated)"
